{"name":"Event-stream-api","tagline":"Restful Event Stream API built with Free monads","body":"# # event-stream-api\r\n\r\nDemo for Melbourne Scala User Group.\r\n\r\n## Quick Start\r\n\r\n```\r\n    ./sbt run\r\n```\r\n\r\nand to bootstrap with some data:\r\n\r\n```\r\n    cd /src/test/resources\r\n    ./play.sh\r\n```\r\n\r\n## Actions\r\n\r\nThis is a system that store deltas or events that can be replayed to represent the state of an entity.  It has a \r\nREST like interface to save, retrieve and snapshot events.\r\n \r\nEvents can be streamed for downstream clients wishing to consumer events.\r\n\r\nHere are the current actions:\r\n\r\n - `POST /event` with an event body \r\n - `GET /events` --> a paginated stream of events (optional params `?pageSize=10&pageNumber=1&systemName=<systemName>`)\r\n - `GET /events/<enitiyId>` --> a paginated stream of events for the given entity Id (optional params `?pageSize=10&pageNumber=1&systemName=<systemName>`)\r\n - `GET /entity<entityId>/<systemName>` --> replays the events building up the entity (optionally pass through the point in time `?at=2015-05-25T12:00:00Z`)\r\n - `POST /snapshot/<entityId>/<systemName>/<time>` --> Creates a snapshot for the entity at the supplied time.\r\n \r\n \r\n## Database setup\r\n\r\nYou can use the in memory mutable map by default or you can configure a postgresql database by uncommenting the following line in\r\n`Main.scala`:\r\n\r\n\r\n```\r\n  //private val db = new SlickDatabase(\"events\", \"events\",\r\n  //  \"jdbc:postgresql://localhost/events\", \"org.postgresql.Driver\")\r\n\r\n  //private val eventStoreInterpreter = new SqlInterpreter(db)\r\n  //Try(sqlInterpreter.createDDL())\r\n```\r\n\r\nand comment out:\r\n\r\n```scala\r\n    private val eventStoreInterpreter = new MutableMapEventStoreInterpreter()\r\n```\r\n\r\nYou will need a running postgresql server with a database called `events` and a user called `events` with password\r\n`events`.\r\n","google":"UA-71332505-4 ","note":"Don't delete this file! It's used internally to help with page regeneration."}